/*
 * Copyright 2012 Eike Kettner
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.eknet.neoswing.view;

import org.eknet.neoswing.ComponentFactory;
import org.eknet.neoswing.utils.NeoSwingUtil;

import javax.swing.*;
import java.awt.*;

/**
 * @author <a href="mailto:eike.kettner@gmail.com">Eike Kettner</a>
 * @since 15.11.12 00:01
 */
public class SearchView {
  private JPanel root;
  private JComboBox typeCombo;
  private JTextField keyField;
  private JTextField valueField;
  private JComboBox valueClassCombo;

  private final ComponentFactory factory;

  public SearchView(ComponentFactory factory) {
    this.factory = factory;
    $$$setupUI$$$();
  }

  public SearchView() {
    this(NeoSwingUtil.getFactory(true));
  }

  public JPanel getRoot() {
    return root;
  }

  public String getType() {
    return (String) typeCombo.getSelectedItem();
  }

  public String getKey() {
    return keyField.getText().trim();
  }

  public Object getValue() {
    return getValueType().parse(valueField.getText());
  }

  public PropertyEditor.PropertyType getValueType() {
    return (PropertyEditor.PropertyType) valueClassCombo.getSelectedItem();
  }

  private void createUIComponents() {
    typeCombo = factory.createComboBox(new Object[]{"Vertex", "Edge"}, true, false);
    valueClassCombo = factory.createComboBox(PropertyEditor.PropertyType.values(), true, false);
    keyField = factory.createTextField();
    valueField = factory.createTextField();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    createUIComponents();
    root = new JPanel();
    root.setLayout(new BorderLayout(0, 0));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new GridBagLayout());
    root.add(panel1, BorderLayout.CENTER);
    final JLabel label1 = new JLabel();
    label1.setHorizontalAlignment(4);
    label1.setText("Type");
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(label1, gbc);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.weightx = 0.7;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(typeCombo, gbc);
    final JLabel label2 = new JLabel();
    label2.setHorizontalAlignment(4);
    label2.setText("Key");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(label2, gbc);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.weightx = 0.7;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(keyField, gbc);
    final JLabel label3 = new JLabel();
    label3.setHorizontalAlignment(4);
    label3.setText("Value");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 4;
    gbc.weightx = 0.2;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(label3, gbc);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 4;
    gbc.weightx = 0.7;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(valueField, gbc);
    final JLabel label4 = new JLabel();
    label4.setText("Search vertices or edges by their properties.");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.gridwidth = 2;
    gbc.weightx = 0.5;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(8, 5, 12, 5);
    panel1.add(label4, gbc);
    final JLabel label5 = new JLabel();
    label5.setHorizontalAlignment(4);
    label5.setText("Value Type");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.weightx = 0.2;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(label5, gbc);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 3;
    gbc.weightx = 0.7;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(5, 5, 5, 5);
    panel1.add(valueClassCombo, gbc);
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new BorderLayout(0, 0));
    root.add(panel2, BorderLayout.NORTH);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return root;
  }
}
